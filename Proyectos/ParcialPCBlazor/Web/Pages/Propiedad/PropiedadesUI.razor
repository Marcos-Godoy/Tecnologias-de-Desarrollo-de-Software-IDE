@page "/propiedades"

@inject SweetAlertService Swal;

@if (!error)
{
    @if (propiedades == null)
    {
        <div class="d-flex align-items-center mt-3">
            <h2 class="me-3">Propiedades</h2>
            <img class="pb-2" style="width:35px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
        </div>
    }
    else
    {
        <div class="d-flex align-items-center justify-content-between mt-3">
            <h2>Propiedades</h2>
            <a href="propiedad">
                <img class="pb-2" src="/assets/add.png" style="width: 60px; height: 60px" />
            </a>
        </div>

        @if (propiedades.Count() == 0)
        {
            <div class="alert alert-primary fw-bold mt-3" role="alert">
                No hay propiedades registradas
            </div>
        }
        else
        {
            <table class="table mt-3">
                <thead>
                    <tr>
                        <th>Titulo</th>
                        <th>Descripcion</th>
                        <th>Cantidad de Habitaciones</th>
                        <th>Metros Cuadrados</th>
                        <th>Precio</th>
                        <th>Fecha Alta</th>
                        <th>Tipo de Propiedad</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var propiedad in propiedades)
                    {
                        <tr>
                            <td style="vertical-align: middle;">@propiedad.Titulo</td>
                            <td style="vertical-align: middle;">@propiedad.Descripcion</td>
                            <td style="vertical-align: middle;">@propiedad.CantidadHabitaciones</td>
                            <td style="vertical-align: middle;">@propiedad.M2</td>
                            <td style="vertical-align: middle;">@propiedad.Precio</td>
                            <td style="vertical-align: middle;">@propiedad.FechaAlta.ToString("dd/MM/yyyy")</td>
                            <td style="vertical-align: middle;">@propiedad.TipoPropiedad.Descripcion</td>
                            <td class="d-flex justify-content-end">
                                <a class="btn btn-primary btn-sm" href="propiedad/@propiedad.Id">
                                    <i class="bi bi-pencil-square fs-5"></i>
                                </a>
                                <button class="btn btn-danger btn-sm ms-2" @onclick="(() => EliminarPropiedad(propiedad))">
                                    <i class="bi bi-trash-fill fs-5"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
}
else
{
    <h2 class="mt-3">Propiedades</h2>
    <div class="alert alert-danger fw-bold my-3" role="alert">
        Error al conectarse a la base de datos!
    </div>
    <div class="d-flex justify-content-end">
        <button class="btn btn-primary" @onclick="OnInitializedAsync">Reintentar</button>
    </div>
}


@code {
    IEnumerable<Propiedad> propiedades;

    bool error;

    protected override async Task OnInitializedAsync()
    {
        propiedades = null;
        error = false;

        try
        {
            propiedades = await PropiedadNegocio.GetAll();

        }
        catch (Exception)
        {
            error = true;
        }
    }

    private async Task EliminarPropiedad(Propiedad propiedad)
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¿Está seguro?",
                Text = "Esta acción no se puede revertir",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                CancelButtonText = "Cancelar",
                ConfirmButtonText = "Confirmar"
            });

        if (result.IsConfirmed)
        {
            HttpResponseMessage response = await PropiedadNegocio.Delete(propiedad);

            if (response.StatusCode == HttpStatusCode.OK)
            {
                await Swal.FireAsync("Propiedad eliminada", "La propiedad ha sido eliminada correctamente", SweetAlertIcon.Success);

                await OnInitializedAsync();
            }
            else if (response.StatusCode == HttpStatusCode.BadRequest)
            {
                await Swal.FireAsync("Error", "La operación no se ha podido llevar a cabo", SweetAlertIcon.Error);
            }
            else if (response.StatusCode == HttpStatusCode.ServiceUnavailable)
            {
                error = true;
            }
        }
    }
}